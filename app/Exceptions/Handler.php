<?php

namespace App\Exceptions;

use DateTime;
use Illuminate\Database\Eloquent\ModelNotFoundException;
use Illuminate\Foundation\Exceptions\Handler as ExceptionHandler;
use Illuminate\Http\JsonResponse;
use Illuminate\Http\Response;
use Throwable;

class Handler extends ExceptionHandler
{
    /**
     * A list of the exception types that are not reported.
     *
     * @var array
     */
    protected $dontReport = [
        //
    ];

    /**
     * A list of the inputs that are never flashed for validation exceptions.
     *
     * @var array
     */
    protected $dontFlash = [
        'current_password',
        'password',
        'password_confirmation',
    ];

    /**
     * Register the exception handling callbacks for the application.
     *
     * @return void
     */
    public function register()
    {
        $this->reportable(function (Throwable $e) {
            //
        });
    }

    public function render($request, Throwable $e): Response|JsonResponse|\Symfony\Component\HttpFoundation\Response
    {
        $status = 500;
        switch ($e::class) {
            case ModelNotFoundException::class:
                $status = 404;
                break;
        }
        if ($request->is('api/*') || $request->wantsJson()) {
            return response()->json([
                'code' => $e->getCode(),
                'message' => $e->getMessage(),
                'trace' => sprintf('File: %s, line: %s', $e->getFile(), $e->getLine()) ,
                'timestamp' => (new DateTime())->format(DATE_ATOM)
            ], $status);
        }
        return parent::render($request, $e); // TODO: Change the autogenerated stub
    }


}
